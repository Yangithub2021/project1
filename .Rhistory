help("read.csv")
getwd()
knitr::opts_chunk$set(echo = TRUE)
dt<-read.csv("C/coursra/Reproducible-research/activity.csc")
dt<-read.csv("C/coursra/Reproducible-research/activity.csv")
dt<-read.csv("C:/coursra/Reproducible-research/activity.csv")
dt<-read.csv("C:/coursera/Reproducible-research/activity.csv")
summary(dt)
dt<-read.csv("C:/coursera/Reproducible-research/activity.csv")
head(dt)
summary(dt)
dt[1:100,]
table(dt$date)
length(table(dt$date))
help(aggregate)
aggregate(steps~date, sum, data=dt)
help(cat)
totalno<-aggregate(steps~date, sum, data=dt)
meanno<-aggregate(steps~date, mean, data=dt)
medianno<-aggregate(stpes~date, median, data=dt)
totalno<-aggregate(steps~date, sum, data=dt)
meanno<-aggregate(steps~date, mean, data=dt)
medianno<-aggregate(steps~date, median, data=dt)
cat("\n", total number perday", "\n")
totalno<-aggregate(steps~date, sum, data=dt)
meanno<-aggregate(steps~date, mean, data=dt)
medianno<-aggregate(steps~date, median, data=dt)
cat("\n", "total number perday", "\n")
print (totalno)
cat("\n", "mean number perday", "\n")
print (meanno)
cat("\n", "median number perday", "\n")
print (medianno)
names(totalno)
totalno<-aggregate(steps~date, sum, data=dt)
print (totalno)
mean(totalno$steps)
median(totalno$steps)
hist(totalno$steps)
help(hist)
hist(totalno$steps, xlab="total number steps", main="Histogram of total number per day")
hist(totalno$steps, xlab="Daily Total Steps", main="Histogram of Total Number Per Day")
aggregate(steps~interval, mean, data=dt)
help(which.max)
intervalmean<-aggregate(steps~interval, mean, data=dt)
which.max(intervalmean$steps)
intervalmean<-aggregate(steps~interval, mean, data=dt)
plot(intervalmean$interval, intervalmean$steps, xlab="time interval", ylab="mean steps")
intervalmean$interval[104]
intervalmean<-aggregate(steps~interval, mean, data=dt)
plot(intervalmean$interval, intervalmean$steps, xlab="time interval", ylab="mean steps")
intervalmean$interval[which.max(interval$steps)]
intervalmean<-aggregate(steps~interval, mean, data=dt)
plot(intervalmean$interval, intervalmean$steps, xlab="time interval", ylab="mean steps")
intervalmean$interval[which.max(intervalmean$steps)]
summary(dt)
sum(is.na(dt$steps))
help(ifelse)
help(if)
sum(is.na(dt$steps))
dt$steps2<-ifelse(is.na(dt$steps, mean(dt$steps), dt$steps))
sum(is.na(dt$steps))
dt$steps2<-ifelse(is.na(dt$steps), mean(dt$steps), dt$steps))
sum(is.na(dt$steps))
dt$steps2<-ifelse(is.na(dt$steps), mean(dt$steps), dt$steps)
intervalmean=aggregate(steps~interval, mean, data=dt)
dt$steps3<-dt$steps
for i in intervalmean$interval) {
sum(is.na(dt$steps))
dt$steps2<-ifelse(is.na(dt$steps), mean(dt$steps), dt$steps)
intervalmean=aggregate(steps~interval, mean, data=dt)
dt$steps3<-dt$steps
for (i in intervalmean$interval) {
if (dt$interval==i && is.na(dt$steps)) dt$step3<-intervalmean$steps
}
intervalmean
name(dt)
names(dt)
sum(is.na(dt$steps))
dt$steps2<-ifelse(is.na(dt$steps), mean(dt$steps), dt$steps)
intervalmean=aggregate(steps~interval, mean, data=dt)
dt$steps3<-dt$steps
for (i in intervalmean$interval) {
if (dt$interval==i && is.na(dt$steps)) dt$steps3<-intervalmean$steps
}
dt[is.na(dt$steps),]
rm(dt)
dt<-read.csv("C:/coursera/Reproducible-research/activity.csv")
head(dt)
summary(dt)
totalno<-aggregate(steps~date, sum, data=dt)
print (totalno)
mean(totalno$steps)
median(totalno$steps)
intervalmean<-aggregate(steps~interval, mean, data=dt)
plot(intervalmean$interval, intervalmean$steps, xlab="time interval", ylab="mean steps")
intervalmean$interval[which.max(intervalmean$steps)]
sum(is.na(dt$steps))
dt$steps2<-ifelse(is.na(dt$steps), mean(dt$steps), dt$steps)
intervalmean=aggregate(steps~interval, mean, data=dt)
dt$steps3<-dt$steps
for (i in intervalmean$interval) {
if (dt$interval==i && is.na(dt$steps)) dt$steps3<-intervalmean$steps
}
intervalmean
dt[is.na(dt$steps),]
sum(is.na(dt$steps))
dt$steps2<-ifelse(dt$steps==NA, mean(dt$steps), dt$steps)
intervalmean=aggregate(steps~interval, mean, data=dt)
dt$steps3<-dt$steps
for (i in intervalmean$interval) {
if (dt$interval==i && is.na(dt$steps)) dt$steps3<-intervalmean$steps
}
dt[is.na(dt$steps),]
sum(is.na(dt$steps))
dt$steps2<-dt$steps
dt$steps2[is.na(dt$steps)]<-mean(dt$steps)
intervalmean=aggregate(steps~interval, mean, data=dt)
dt$steps3<-dt$steps
for (i in intervalmean$interval) {
if (dt$interval==i && is.na(dt$steps)) dt$steps3<-intervalmean$steps
}
dt[is.na(dt$steps),]
mean(dt$steps)
help(mean)
sum(is.na(dt$steps))
dt$steps2<-dt$steps
dt$steps2[is.na(dt$steps)]<-mean(dt$steps, na.rm=TRUE)
intervalmean=aggregate(steps~interval, mean, data=dt)
dt$steps3<-dt$steps
for (i in intervalmean$interval) {
if (dt$interval==i && is.na(dt$steps)) dt$steps3<-intervalmean$steps
}
dt[is.na(dt$steps),]
summary(dt)
help(merge)
names(intervalmean)
sum(is.na(dt$steps))
dt$steps2<-dt$steps
dt$steps2[is.na(dt$steps)]<-mean(dt$steps, na.rm=TRUE)
intervalmean=aggregate(steps~interval, mean, data=dt)
names(intervalmean)<-c("interval","stepsmean")
dt2<-merge(dt, intervalmean, by="interval")
names(dt2)
summary(dt2)
dt2$steps3<-ifesle(is.na(dt2$steps), dt$stepsmean, dt$steps )
dt2$steps3<-ifelse(is.na(dt2$steps), dt$stepsmean, dt$steps )
dt2$steps3<-ifelse(dt2$steps==NA, dt$stepsmean, dt$steps )
summary(dt2)
dt2$steps3<-dt2$steps
summary(dt2)
dt2$steps3<-dt2$stepsmean[is.na(dt$steps)]
dt2$steps3[is.na(dt$steps)]<-dt2$stepsmean[is.na(dt$steps)]
summary(dt2)
summary(dt2$stepsmean[is.na(dt$steps)])
length(dt2$stepsmean[is.na(dt$steps)])
dt2$steps3[is.na(dt2$steps)]<-dt2$stepsmean[is.na(dt2$steps)]
summary(dt2)
sum(is.na(dt$steps))
dt$steps2<-dt$steps
dt$steps2[is.na(dt$steps)]<-mean(dt$steps, na.rm=TRUE)
intervalmean=aggregate(steps~interval, mean, data=dt)
names(intervalmean)<-c("interval","stepsmean")
dt2<-merge(dt, intervalmean, by="interval")
dt2$steps3<-dt2$steps
dt2$steps3[is.na(dt2$steps)]<-dt2$stepsmean[is.na(dt2$steps)]
summary(dt2)
summary(dt2[,c("steps","steps3")])
q("no")
knitr::opts_chunk$set(echo = TRUE)
hist(totalno$steps, xlab="Daily Total Steps", main="Histogram of Total Number Per Day")
knitr::opts_chunk$set(echo = TRUE)
dt<-read.csv("C:/coursera/Reproducible-research/activity.csv")
head(dt)
summary(dt)
totalno<-aggregate(steps~date, sum, data=dt)
print (totalno)
mean(totalno$steps)
median(totalno$steps)
hist(totalno$steps, xlab="Daily Total Steps", main="Histogram of Total Number Per Day")
intervalmean<-aggregate(steps~interval, mean, data=dt)
plot(intervalmean$interval, intervalmean$steps, xlab="time interval", ylab="mean steps")
intervalmean$interval[which.max(intervalmean$steps)]
summary(dt2[,c("steps","steps3")])
sum(is.na(dt$steps))
dt$steps2<-dt$steps
dt$steps2[is.na(dt$steps)]<-mean(dt$steps, na.rm=TRUE)
intervalmean=aggregate(steps~interval, mean, data=dt)
names(intervalmean)<-c("interval","stepsmean")
dt2<-merge(dt, intervalmean, by="interval")
dt2$steps3<-dt2$steps
dt2$steps3[is.na(dt2$steps)]<-dt2$stepsmean[is.na(dt2$steps)]
summary(dt2[,c("steps","steps3")])
names(dt2)
summary(dt2[,c("steps","steps3")])
dailytot <- aggregate(steps3 ~ date, sum, data=dt2)
hist(dailytot, xlab="daily total steps", main="Histogram of Total Number Per Day after imputation")
summary(dt2[,c("steps","steps3")])
dailytot <- aggregate(steps3 ~ date, sum, data=dt2)
hist(dailytot$steps3, xlab="daily total steps", main="Histogram of Total Number Per Day after imputation")
summary(dt2[,c("steps","steps3")])
dailytot <- aggregate(steps3 ~ date, sum, data=dt2)
hist(dailytot$steps3, xlab="daily total steps", main="Histogram of Total Number Per Day after imputation")
mean(dailytot$steps3)
median(dailytot$steps3)
help(hist)
hist(totalno$steps, freq=FALSE, xlab="Daily Total Steps", main="Histogram of Total Number Per Day")
hist(totalno$steps, freq=FALSE, breaks=10, xlab="Daily Total Steps", main="Histogram of Total Number Per Day")
summary(dt2[,c("steps","steps3")])
dailytot <- aggregate(steps3 ~ date, sum, data=dt2)
hist(dailytot$steps3, freq=FALSE, breaks=10,  xlab="daily total steps", main="Histogram of Total Number Per Day after imputation")
mean(dailytot$steps3)
median(dailytot$steps3)
summary(dt2[,c("steps","steps3")])
dailytot <- aggregate(steps3 ~ date, sum, data=dt2)
hist(dailytot$steps3, freq=FALSE, breaks=20,  xlab="daily total steps", main="Histogram of Total Number Per Day after imputation")
mean(dailytot$steps3)
median(dailytot$steps3)
help(layout)
summary(dt2[,c("steps","steps3")])
dailytot <- aggregate(steps3 ~ date, sum, data=dt2)
hist(dailytot$steps3, freq=FALSE, breaks=20,  xlab="daily total steps", main="Histogram of Total Number Per Day after imputation")
hist(totalno$steps, freq=FALSE, breaks=20, xlab="Daily Total Steps", main="Histogram of Total Number Per Day before imputation")
mean(dailytot$steps3)
median(dailytot$steps3)
summary(dt2[,c("steps","steps3")])
dailytot <- aggregate(steps3 ~ date, sum, data=dt2)
hist(dailytot$steps3, freq=FALSE, breaks=20, ylim=c(0, 0.0003), xlab="daily total steps", main="Histogram of Total Number Per Day after imputation")
hist(totalno$steps, freq=FALSE, breaks=20, ylim=c(0, 0.0003), xlab="Daily Total Steps", main="Histogram of Total Number Per Day before imputation")
mean(dailytot$steps3)
median(dailytot$steps3)
help(weekdays)
summary(dt2)
head(dt2)
head(dt)
help(as.Data)
help(as.Date)
dt2$date2<-as.Date(dt2$date,"%Y-%m-%d")
head(dt2)
summary(dt2)
dt2$date2<-as.Date(dt2$date,"%Y-%m-%d")
summary(dt2[,c("date", "date2")])
help("weekdays")
weekdays(dt2$date2)[1:10]
dt2$date2<-as.Date(dt2$date,"%Y-%m-%d")
summary(dt2[,c("date", "date2")])
dt2$weekdays<-weekdays(dt2$date2)
head(dt2)
dt2$date2<-as.Date(dt2$date,"%Y-%m-%d")
summary(dt2[,c("date", "date2")])
dt2$weekdays<-weekdays(dt2$date2)
dt2$weekend<-ifelse(dt2$weekdays=="Saturday"||dt2$weekdays=="Sunday", 1, 0)
head(dt2)
str(dt2)
help(ifelse)
dt2$date2<-as.Date(dt2$date,"%Y-%m-%d")
summary(dt2[,c("date", "date2")])
dt2$weekdays<-weekdays(dt2$date2)
dt2$weekend<-ifelse(dt2$weekdays==Saturday||dt2$weekdays==Sunday, 1, 0)
dt2$date2<-as.Date(dt2$date,"%Y-%m-%d")
summary(dt2[,c("date", "date2")])
dt2$weekdays<-weekdays(dt2$date2)
dt2$weekend<-ifelse((dt2$weekdays=="Saturday"||dt2$weekdays=="Sunday"), 1, 0)
head(dt2)
dt2$date2<-as.Date(dt2$date,"%Y-%m-%d")
summary(dt2[,c("date", "date2")])
dt2$weekdays<-weekdays(dt2$date2)
dt2$weekend<-ifelse((dt2$weekdays=="Saturday"|dt2$weekdays=="Sunday"), 1, 0)
head(dt2)
q("no")
knitr::opts_chunk$set(echo = TRUE)
dt<-read.csv("C:/coursera/Reproducible-research/activity.csv")
head(dt)
summary(dt)
totalno<-aggregate(steps~date, sum, data=dt)
print (totalno)
mean(totalno$steps)
median(totalno$steps)
hist(totalno$steps, freq=FALSE, breaks=10, xlab="Daily Total Steps", main="Histogram of Total Number Per Day")
intervalmean<-aggregate(steps~interval, mean, data=dt)
plot(intervalmean$interval, intervalmean$steps, xlab="time interval", ylab="mean steps")
intervalmean$interval[which.max(intervalmean$steps)]
sum(is.na(dt$steps))
dt$steps2<-dt$steps
dt$steps2[is.na(dt$steps)]<-mean(dt$steps, na.rm=TRUE)
intervalmean=aggregate(steps~interval, mean, data=dt)
names(intervalmean)<-c("interval","stepsmean")
dt2<-merge(dt, intervalmean, by="interval")
dt2$steps3<-dt2$steps
dt2$steps3[is.na(dt2$steps)]<-dt2$stepsmean[is.na(dt2$steps)]
summary(dt2[,c("steps","steps3")])
dailytot <- aggregate(steps3 ~ date, sum, data=dt2)
hist(dailytot$steps3, freq=FALSE, breaks=20, ylim=c(0, 0.0003), xlab="daily total steps", main="Histogram of Total Number Per Day after imputation")
hist(totalno$steps, freq=FALSE, breaks=20, ylim=c(0, 0.0003), xlab="Daily Total Steps", main="Histogram of Total Number Per Day before imputation")
mean(dailytot$steps3)
median(dailytot$steps3)
dt2$date2<-as.Date(dt2$date,"%Y-%m-%d")
summary(dt2[,c("date", "date2")])
dt2$weekdays<-weekdays(dt2$date2)
dt2$weekend<-ifelse((dt2$weekdays=="Saturday"|dt2$weekdays=="Sunday"), 1, 0)
help(aggregate)
help(lm)
weekdaydt<-aggregate(steps3~interval, subset=weekend=0, data=dt2)
weekdaydt<-aggregate(steps3~interval, subset=weekend==0, data=dt2)
weekdaydt<-aggregate(steps3~interval, FUN=mean, subset=weekend==0, data=dt2)
weekenddt<-aggregate(steps3~interval, FUN=mean, subset=weekend==1, data=dt2)
head(weekdaydt)
head(weekenddt)
weekdaydt<-aggregate(steps3~interval, FUN=mean, subset=weekend==0, data=dt2)
weekenddt<-aggregate(steps3~interval, FUN=mean, subset=weekend==1, data=dt2)
plot(weekdaydt$interval, weekdaydt$steps)
weekdaydt<-aggregate(steps3~interval, FUN=mean, subset=weekend==0, data=dt2)
weekenddt<-aggregate(steps3~interval, FUN=mean, subset=weekend==1, data=dt2)
plot(weekdaydt$interval, weekdaydt$steps, type="l")
weekdaydt<-aggregate(steps3~interval, FUN=mean, subset=weekend==0, data=dt2)
weekenddt<-aggregate(steps3~interval, FUN=mean, subset=weekend==1, data=dt2)
plot(weekdaydt$interval, weekdaydt$steps, xlab="5-minute interval",ylab="mean steps", type="l")
weekdaydt<-aggregate(steps3~interval, FUN=mean, subset=weekend==0, data=dt2)
weekenddt<-aggregate(steps3~interval, FUN=mean, subset=weekend==1, data=dt2)
plot(weekdaydt$interval, weekdaydt$steps, xlab="5-minute interval",ylab="mean steps", type="l", main="weekdays")
weekdaydt<-aggregate(steps3~interval, FUN=mean, subset=weekend==0, data=dt2)
weekenddt<-aggregate(steps3~interval, FUN=mean, subset=weekend==1, data=dt2)
plot(weekdaydt$interval, weekdaydt$steps, xlab="5-minute interval",ylab="mean steps", type="l", main="weekdays")
plot(weekenddt$interval, weekenddt$steps, xlab="5-minute interval",ylab="mean steps", type="l", main="weekends")
weekdaydt<-aggregate(steps3~interval, FUN=mean, subset=weekend==0, data=dt2)
weekenddt<-aggregate(steps3~interval, FUN=mean, subset=weekend==1, data=dt2)
plot(weekdaydt$interval, weekdaydt$steps3, xlab="5-minute interval",ylab="mean steps", type="l", main="weekdays")
plot(weekenddt$interval, weekenddt$steps3, xlab="5-minute interval",ylab="mean steps", type="l", main="weekends")
weekdaydt<-aggregate(steps3~interval, FUN=mean, subset=weekend==0, data=dt2)
weekenddt<-aggregate(steps3~interval, FUN=mean, subset=weekend==1, data=dt2)
plot(weekdaydt$interval, weekdaydt$steps3, xlab="5-minute interval",ylab="mean steps",
ylim=c(0, max(weekdaydt$steps3)), type="l", main="weekdays")
plot(weekenddt$interval, weekenddt$steps3, xlab="5-minute interval",ylab="mean steps",
ylim=c(0, max(weekdaydt$steps3)), type="l", main="weekends")
help(layout)
weekdaydt<-aggregate(steps3~interval, FUN=mean, subset=weekend==0, data=dt2)
weekenddt<-aggregate(steps3~interval, FUN=mean, subset=weekend==1, data=dt2)
def.par <- par(no.readonly = TRUE)
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
plot(weekdaydt$interval, weekdaydt$steps3, xlab="5-minute interval", ylab="mean steps",
ylim=c(0, max(weekdaydt$steps3)), type="l", main="weekdays")
plot(weekenddt$interval, weekenddt$steps3, xlab="5-minute interval", ylab="mean steps",
ylim=c(0, max(weekdaydt$steps3)), type="l", main="weekends")
par(def.par)
Q("NO")
q("no")
knitr::opts_chunk$set(echo = TRUE)
dt<-read.csv("C:/coursera/Reproducible-research/activity.csv")
head(dt)
summary(dt)
totalno<-aggregate(steps~date, sum, data=dt)
print (totalno)
mean(totalno$steps)
median(totalno$steps)
hist(totalno$steps, freq=FALSE, breaks=10, xlab="Daily Total Steps", main="Histogram of Total Number Per Day")
intervalmean<-aggregate(steps~interval, mean, data=dt)
plot(intervalmean$interval, intervalmean$steps, xlab="time interval", ylab="mean steps")
intervalmean$interval[which.max(intervalmean$steps)]
sum(is.na(dt$steps))
dt$steps2<-dt$steps
dt$steps2[is.na(dt$steps)]<-mean(dt$steps, na.rm=TRUE)
intervalmean=aggregate(steps~interval, mean, data=dt)
names(intervalmean)<-c("interval","stepsmean")
dt2<-merge(dt, intervalmean, by="interval")
dt2$steps3<-dt2$steps
dt2$steps3[is.na(dt2$steps)]<-dt2$stepsmean[is.na(dt2$steps)]
summary(dt2[,c("steps","steps3")])
dailytot <- aggregate(steps3 ~ date, sum, data=dt2)
hist(dailytot$steps3, freq=FALSE, breaks=20, ylim=c(0, 0.0003), xlab="daily total steps", main="Histogram of Total Number Per Day after imputation")
hist(totalno$steps, freq=FALSE, breaks=20, ylim=c(0, 0.0003), xlab="Daily Total Steps", main="Histogram of Total Number Per Day before imputation")
mean(dailytot$steps3)
median(dailytot$steps3)
dt2$date2<-as.Date(dt2$date,"%Y-%m-%d")
summary(dt2[,c("date", "date2")])
dt2$weekdays<-weekdays(dt2$date2)
dt2$weekend<-ifelse((dt2$weekdays=="Saturday"|dt2$weekdays=="Sunday"), 1, 0)
weekdaydt<-aggregate(steps3~interval, FUN=mean, subset=weekend==0, data=dt2)
weekenddt<-aggregate(steps3~interval, FUN=mean, subset=weekend==1, data=dt2)
def.par <- par(no.readonly = TRUE)
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
plot(weekdaydt$interval, weekdaydt$steps3, xlab="5-minute interval", ylab="mean steps",
ylim=c(0, max(weekdaydt$steps3)), type="l", main="weekdays")
plot(weekenddt$interval, weekenddt$steps3, xlab="5-minute interval", ylab="mean steps",
ylim=c(0, max(weekdaydt$steps3)), type="l", main="weekends")
par(def.par)
weekdaydt[1:10,]
weekdaydt<-aggregate(steps3~interval, FUN=mean, subset=weekend==0, data=dt2)
weekenddt<-aggregate(steps3~interval, FUN=mean, subset=weekend==1, data=dt2)
def.par <- par(no.readonly = TRUE)
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
plot(weekdaydt$interval, weekdaydt$steps3, xlab="5-minute interval", ylab="mean steps",
ylim=c(0, max(weekdaydt$steps3)), type="l", main="weekdays")
plot(weekenddt$interval, weekenddt$steps3, xlab="5-minute interval", ylab="mean steps",
ylim=c(0, max(weekdaydt$steps3)), type="l", main="weekends")
par(def.par)
weekdaydt$group<-rep("weekday", nrow(weekdaydt))
weekenddt$group<-rep("weekend", nrow(weekenddt))
totaldt<-rbind(weekdaydt, weekenddt)
totaldt
library(lattice)
help(package=lattice)
weekdaydt<-aggregate(steps3~interval, FUN=mean, subset=weekend==0, data=dt2)
weekenddt<-aggregate(steps3~interval, FUN=mean, subset=weekend==1, data=dt2)
def.par <- par(no.readonly = TRUE)
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
plot(weekdaydt$interval, weekdaydt$steps3, xlab="5-minute interval", ylab="mean steps",
ylim=c(0, max(weekdaydt$steps3)), type="l", main="weekdays")
plot(weekenddt$interval, weekenddt$steps3, xlab="5-minute interval", ylab="mean steps",
ylim=c(0, max(weekdaydt$steps3)), type="l", main="weekends")
par(def.par)
weekdaydt$group<-rep("weekday", nrow(weekdaydt))
weekenddt$group<-rep("weekend", nrow(weekenddt))
totaldt<-rbind(weekdaydt, weekenddt)
library(lattice)
panel.xyplot(x=totaldt$interval, y=totaldt$steps3, groups = totaldt$group, type="l")
weekdaydt<-aggregate(steps3~interval, FUN=mean, subset=weekend==0, data=dt2)
weekenddt<-aggregate(steps3~interval, FUN=mean, subset=weekend==1, data=dt2)
def.par <- par(no.readonly = TRUE)
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
plot(weekdaydt$interval, weekdaydt$steps3, xlab="5-minute interval", ylab="mean steps",
ylim=c(0, max(weekdaydt$steps3)), type="l", main="weekdays")
plot(weekenddt$interval, weekenddt$steps3, xlab="5-minute interval", ylab="mean steps",
ylim=c(0, max(weekdaydt$steps3)), type="l", main="weekends")
par(def.par)
weekdaydt$group<-rep("weekday", nrow(weekdaydt))
weekenddt$group<-rep("weekend", nrow(weekenddt))
totaldt<-rbind(weekdaydt, weekenddt)
library(lattice)
xyplot(step3~interval | group, data=totaldt, type="l")
weekdaydt<-aggregate(steps3~interval, FUN=mean, subset=weekend==0, data=dt2)
weekenddt<-aggregate(steps3~interval, FUN=mean, subset=weekend==1, data=dt2)
def.par <- par(no.readonly = TRUE)
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
plot(weekdaydt$interval, weekdaydt$steps3, xlab="5-minute interval", ylab="mean steps",
ylim=c(0, max(weekdaydt$steps3)), type="l", main="weekdays")
plot(weekenddt$interval, weekenddt$steps3, xlab="5-minute interval", ylab="mean steps",
ylim=c(0, max(weekdaydt$steps3)), type="l", main="weekends")
par(def.par)
weekdaydt$group<-rep("weekday", nrow(weekdaydt))
weekenddt$group<-rep("weekend", nrow(weekenddt))
totaldt<-rbind(weekdaydt, weekenddt)
library(lattice)
xyplot(steps3~interval | group, data=totaldt, type="l")
q("no")
knitr::opts_chunk$set(echo = TRUE)
dt<-read.csv("C:/coursera/Reproducible-research/activity.csv")
head(dt)
summary(dt)
totalno<-aggregate(steps~date, sum, data=dt)
print (totalno)
mean(totalno$steps)
median(totalno$steps)
hist(totalno$steps, freq=FALSE, breaks=10, xlab="Daily Total Steps", main="Histogram of Total Number Per Day")
intervalmean<-aggregate(steps~interval, mean, data=dt)
plot(intervalmean$interval, intervalmean$steps, xlab="time interval", ylab="mean steps")
intervalmean$interval[which.max(intervalmean$steps)]
intervalmean<-aggregate(steps~interval, mean, data=dt)
plot(intervalmean$interval, intervalmean$steps, xlab="time interval", ylab="mean steps", main="Average stpes over 5 minute interval")
intervalmean$interval[which.max(intervalmean$steps)]
intervalmean<-aggregate(steps~interval, mean, data=dt)
plot(intervalmean$interval, intervalmean$steps, xlab="time interval", ylab="mean steps", main="Average stpes over 5 minute interval")
intervalmean$interval[which.max(intervalmean$steps)]
max(intervalmean$steps)
sum(is.na(dt$steps))
intervalmean=aggregate(steps~interval, mean, data=dt)
names(intervalmean)<-c("interval","stepsmean")
dt2<-merge(dt, intervalmean, by="interval")
dt2$steps3<-dt2$steps
dt2$steps3[is.na(dt2$steps)]<-dt2$stepsmean[is.na(dt2$steps)]
summary(dt2[,c("steps","steps3")])
dailytot <- aggregate(steps3 ~ date, sum, data=dt2)
def.par <- par(no.readonly = TRUE)
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
hist(dailytot$steps3, freq=FALSE, breaks=20, ylim=c(0, 0.0003), xlab="daily total steps", main="Histogram of Total Number Per Day after imputation")
hist(totalno$steps, freq=FALSE, breaks=20, ylim=c(0, 0.0003), xlab="Daily Total Steps", main="Histogram of Total Number Per Day before imputation")
par(def.par)
mean(dailytot$steps3)
median(dailytot$steps3)
summary(dt2[,c("steps","steps3")])
dailytot <- aggregate(steps3 ~ date, sum, data=dt2)
def.par <- par(no.readonly = TRUE)
layout(matrix(c(1,2), 1, 2, byrow = TRUE))
hist(dailytot$steps3, freq=FALSE, breaks=20, ylim=c(0, 0.0003), xlab="daily total steps", main="After imputation")
hist(totalno$steps, freq=FALSE, breaks=20, ylim=c(0, 0.0003), xlab="Daily Total Steps", main="Before imputation")
par(def.par)
mean(dailytot$steps3)
median(dailytot$steps3)
dt2$date2<-as.Date(dt2$date,"%Y-%m-%d")
summary(dt2[,c("date", "date2")])
dt2$weekdays<-weekdays(dt2$date2)
dt2$weekend<-ifelse((dt2$weekdays=="Saturday"|dt2$weekdays=="Sunday"), 1, 0)
weekdaydt<-aggregate(steps3~interval, FUN=mean, subset=weekend==0, data=dt2)
weekenddt<-aggregate(steps3~interval, FUN=mean, subset=weekend==1, data=dt2)
weekdaydt$group<-rep("weekday", nrow(weekdaydt))
weekenddt$group<-rep("weekend", nrow(weekenddt))
totaldt<-rbind(weekdaydt, weekenddt)
library(lattice)
xyplot(steps3~interval | group, data=totaldt, type="l")
weekdaydt<-aggregate(steps3~interval, FUN=mean, subset=weekend==0, data=dt2)
weekenddt<-aggregate(steps3~interval, FUN=mean, subset=weekend==1, data=dt2)
weekdaydt$group<-rep("weekday", nrow(weekdaydt))
weekenddt$group<-rep("weekend", nrow(weekenddt))
totaldt<-rbind(weekdaydt, weekenddt)
library(lattice)
xyplot(steps3~interval | group, data=totaldt, type="l")
q("no")
setwd("C:/coursera/Reproducible-research/project1/submitP1a")
# library(rmarkdown)
# render("PA1_template.Rmd", "html_document")
# help(package=knitr)
library(knitr)
knit2html("PA1_template.Rmd","PA1_template.html", force_v1=TRUE)
